MySQL
sys  -  это схема со служебными объектами, без данной схемы СУБД работать не будет.
sakila и world - это схемы с объектами для обучения/примера. Можно посмотреть их структуру/наполнение и потренироваться  в написании запросов к ним, не создавая свои собственные объекты.

char - <количество символов> - может быть любым значением от 0 до 255.
В столбцах с типом CHAR могут храниться строки фиксированной длины, которая дополняется пробелами до значения <количество символов>. Тип CHAR может хранить до 255 байт.

varchar - <количество символов> - может быть любым значением от 0 до 65535.
В столбцах с типом VARCHAR могут храниться строки переменной длины, отличающиеся от типа CHAR тем, что не дополняется пробелами до максимальной длины. Максимальный размер до 65535 байт.

binary - с фиксированной длиной, строки дополняются нулевым байтом до максимальной длины. 
varbinary  хранит строки переменной длины, поэтому дополняться нулевыми байтами не будет.

Blob используется для хранения больших бинарных данных, таких как картинки.
Text предназначен также для хранения больших данных, но текстового содержания.

enum строковый объект со значением, выбранным из списка разрешенных значений, которые перечислены явно в спецификации столбца при создании таблицы.
set  строковый объект, у которого может быть ноль или больше значений, каждое из которых должно быть выбрано из списка разрешенных значений, определенных, когда таблица составлена. 

Числа с фиксированной точкой:
Decimal (<точность>, <масштаб>)
точность - общее количество разрядов. Если точность не указана, то по умолчанию это будет 10. Максимальное значение - 65.
масштаб - количество разрядов справа от десятичной точки. Значение по умолчанию для масштаба равно 0.

FLOAT(M,D), где M - общее количество цифр, а D - количество цифр после запятой. 
DOUBLE(M,D), где M - общее количество цифр, а D - количество цифр после запятой. Данный тип также имеет псевдонимы REAL и DOUBLE PRECISION, которые можно использовать вместо DOUBLE.

MySQL поддерживает стандартные типы целого числа INTEGER (или INT) и SMALLINT. Типы целого числа TINYINT, MEDIUMINT и BIGINT.

Тип битового значения BIT(<количество бит>). 
<количество бит> - может принимать значения от 1 до 64, по умолчанию - 8 бит.

Дата и время 
типы данных: DATE, DATETIME, TIMESTAMP, TIME, YEAR
DATE используется для значений с частью даты, но без части времени. Формат My SQL  'YYYY-MM-DD'.
DATETIME используется для значений с частями даты и времени. MySQL получает и выводит на экран значения DATETIME в формате 'YYYY-MM-DD HH:MI:SS'. Этот тип данных не зависит от временной зоны. Он всегда отображается ровно в таком виде, в котором был установлен и в котором хранится в базе данных.
TIMESTAMP используется для значений, которые содержат части даты и времени. TIMESTAMP имеет диапазон от '1970-01-01 00:00:01' UTC до '2038-01-19 03:14:07' UTC. При выборках отображается с учётом текущего часового пояса. В базе данных при создании записи с типом TIMESTAMP значение сохраняется по нулевому часовому поясу. 
MySQL получает и отображает значения TIME в формате 'HH:MI:SS' (или 'HHH:MI:SS' для больших значений часов). Значения TIME могут быть в диапазоне от '-838:59:59' до '838:59:59'.
Тип YEAR 1-байтовый тип, используемый, чтобы представить значения года. MySQL отображает YEAR в формате YYYY с диапазоном от 1901 до 2155 или 0000.

Правила целостности
Задаются условия, которым должны удовлетворять данные в базе. 
Ограничения на данные в пределах одной таблицы:
1. Запрет неопределенных значений (not null)
2. Уникальность значения (unique)
3. Первичный ключ (Primary key)
Кроме того, для ограничения ссылочной целостности существуют внешние ключи (foreign key).

Запрет неопределенных значений (NOT NULL):
NULL - это специальное значение, которое используется в SQL для обозначения отсутствия какого-либо значения в ячейке таблицы (! не равно 0).
NOT NULL - проверка на непустое значение.
Если таблица уже создана - применяем команду ALTER для изменения атрибутов столбца.

Уникальное значение (UNIQUE), в таблице не может существовать двух строк с одинаковыми значениями столбца или набора столбцов. При этом неопределенные значения не считаются одинаковыми, то есть две или более строк со значениями NULL могут быть у столбца/столбцов, заявленные как UNIQUE.

Первичный ключ (PRIMARY KEY) - поле или комбинация полей в таблице, которое позволяет однозначно идентифицировать каждую запись в ней. 
Значение в столбце считается первичным ключом, если оно непустое (NOT NULL) и уникально в пределах столбца данной таблицы (UNIQUE). Первичный ключ может быть составным и представлять собой комбинацию столбцов. 
